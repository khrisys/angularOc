{
  "ast": null,
  "code": "import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/user.service\";\nimport * as i2 from \"@angular/router\";\nexport let SingleUserComponent = /*#__PURE__*/(() => {\n  class SingleUserComponent {\n    /**\r\n     *\r\n     * @param userService : service User\r\n     * @param route : route contient toutes les infos de la route active, et donc contient aussi les infos du fragment ':id' contenu dans\r\n     * l'url\r\n     */\n    constructor(userService, route) {\n      this.userService = userService;\n      this.route = route;\n    }\n    /**\r\n     * A l'instanciation, SingleUserComponent prend l'id qui lui est passé comme param dans l'url, et l'utilise pour resoudre le name et\r\n     * le status de cet user\r\n     */\n\n\n    ngOnInit() {\n      const id = this.route.snapshot.params['id']; // Ici, l'id sera le nom de l'appareil\n\n      this.name = this.userService.getUserById(+id).name; // le '+' devant 'id' va caster le string en number\n\n      this.status = this.userService.getUserById(+id).status;\n    }\n\n  }\n\n  SingleUserComponent.ɵfac = function SingleUserComponent_Factory(t) {\n    return new (t || SingleUserComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n\n  SingleUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SingleUserComponent,\n    selectors: [[\"app-single-user\"]],\n    decls: 7,\n    vars: 2,\n    consts: [[1, \"col-xs-12\", 2, \"border\", \"#24292e solid thin\"], [\"routerLink\", \"/users\"]],\n    template: function SingleUserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"p\");\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"a\", 1);\n        i0.ɵɵtext(6, \"Retour aux utilisateurs\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.name);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Status : \", ctx.status, \"\");\n      }\n    },\n    directives: [i2.RouterLinkWithHref],\n    styles: [\"\"]\n  });\n  return SingleUserComponent;\n})();",
  "map": null,
  "metadata": {},
  "sourceType": "module"
}
