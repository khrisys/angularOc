{
  "ast": null,
  "code": "import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\n\nfunction AuthComponent_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function AuthComponent_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.onSignIn();\n    });\n    i0.ɵɵtext(1, \"Se connecter\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AuthComponent_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function AuthComponent_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onSignOut();\n    });\n    i0.ɵɵtext(1, \"Se d\\u00E9connecter\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let AuthComponent = /*#__PURE__*/(() => {\n  class AuthComponent {\n    /**\r\n     * Constructeur de l'objet Auth.\r\n     * Injection de authService et Router\r\n     *\r\n     * @param authService : service d'authentification\r\n     * @param router : permet la redirection vers une page precise apres authentification\r\n     */\n    constructor(authService, router) {\n      this.authService = authService;\n      this.router = router;\n    }\n\n    ngOnInit() {\n      this.authStatus = this.authService.isAuth;\n    }\n    /**\r\n     * Comme la methode signIn est async, on utilise le \"then()\" pour prendre en charge le coté async\r\n     * Le router permet de naviguer vers un ou plusieurs composants precis lors de l'authentification (ici, on va vers le composant des\r\n     * utilisateurs)\r\n     *\r\n     * Dans le callback de cette methode,  on redirige l'user vers la page des utilisateurs grace à \"navigate()\" auquel on passe un array.\r\n     */\n\n\n    onSignIn() {\n      this.authService.signIn().then(() => {\n        // console.log('connecté !');\n        this.authStatus = this.authService.isAuth;\n        this.router.navigate(['users']);\n      });\n    }\n\n    onSignOut() {\n      this.authService.signOut();\n      this.authStatus = this.authService.isAuth;\n    }\n\n  }\n\n  AuthComponent.ɵfac = function AuthComponent_Factory(t) {\n    return new (t || AuthComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  AuthComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AuthComponent,\n    selectors: [[\"app-auth\"]],\n    decls: 4,\n    vars: 2,\n    consts: [[\"class\", \"btn btn-success\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"btn btn-danger\", 3, \"click\", 4, \"ngIf\"], [1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"btn\", \"btn-danger\", 3, \"click\"]],\n    template: function AuthComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"Authentification\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, AuthComponent_button_2_Template, 2, 0, \"button\", 0);\n        i0.ɵɵtemplate(3, AuthComponent_button_3_Template, 2, 0, \"button\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.authStatus);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.authStatus);\n      }\n    },\n    directives: [i3.NgIf],\n    styles: [\"\"]\n  });\n  return AuthComponent;\n})();",
  "map": null,
  "metadata": {},
  "sourceType": "module"
}
